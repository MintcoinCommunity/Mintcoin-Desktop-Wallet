language: cpp

install:
  # Travis already has OpenSSL and Boost installed via Homebrew, but we
  # need to add a couple more packages
  - if [ $TRAVIS_OS_NAME = osx ]; then
      brew upgrade ;
      brew install miniupnpc berkeley-db@4 ;
    fi

matrix:
  include:
  # Build mintcoind
  # Ubuntu 16.04 LTS (Xenial Xerus) is our latest Ubuntu version
  - os: linux
    dist: xenial
    sudo: required
    addons:
      apt:
        packages:
          - libdb++-dev
          - libboost-all-dev
          - libqrencode-dev
          - libminiupnpc-dev
    script: cd src && make -f makefile.unix -j2

  # Build mintcoind
  # Cross-compile Windows 32-bit daemon
  - os: linux
    dist: xenial
    sudo: required
    script: bash src/mxe-build.sh windows32

  # Build mintcoind
  # Cross-compile Windows 64-bit daemon
  - os: linux
    dist: xenial
    sudo: required
    script: bash src/mxe-build.sh windows64

  # Build mintcoind
  # Ubuntu 16.04 LTS (Xenial Xerus) is our latest Ubuntu version
  # Make a 32-bit version using Debian multiarch
  - os: linux
    dist: xenial
    sudo: required
    # To support 32-bit builds, we add the i386 architecture to
    # Ubuntu, and then install 32-bit versions of the compiler and
    # libraries needed. For details of Debian multiarch see the wiki:
    #
    # https://wiki.debian.org/Multiarch
    #
    # Even with multiarch support, we have to do a bit of a dance, for
    # two reasons.
    #
    # First, apt-get does not seem to understand dependencies for
    # the multiarch stuff, so we have to explicitly install all of
    # the dependencies.
    #
    # Second, one of the packages is built for the "all" architecture.
    # In principle this should work, but for some reason the system
    # insists that to use it for the MPI libraries it needs to be for
    # the "i386" architecture. So we download and repackage the .deb
    # file modified to support this. For details see this Serverfault
    # message:
    #
    # https://serverfault.com/a/383958
    #
    before_script:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update
        - sudo apt-get install -y gcc:i386 cpp:i386 gcc-4.8:i386 binutils:i386
        - sudo apt-get install -y g++:i386
        - sudo apt-get install -y libssl-dev:i386
        - sudo apt-get install -y libdb++-dev:i386
        - sudo apt-get install -y libminiupnpc-dev:i386
        - apt-get download openmpi-common:all
        - ar x openmpi-common_*_all.deb
        - tar xf control.tar.gz
        - |
          sed -i "s/^Architecture: all/Architecture: i386/" control
        - tar czf control.tar.gz md5sums control
        - ar rcs openmpi-common_*_all.deb debian-binary control.tar.gz data.tar.xz
        - sudo dpkg -i openmpi-common_*_all.deb
        - sudo apt-get install -y libboost-all-dev:i386 libboost-mpi-dev:i386 libboost-mpi-python-dev:i386 libboost-mpi-python1.54-dev:i386 libboost-mpi-python1.54.0:i386 libboost-mpi-python1.54-dev:i386 libboost-mpi1.54-dev:i386 python:i386
    script: cd src && make -f makefile.unix -j2

  # Build mintcoind static
  # Ubuntu 16.04 LTS (Xenial Xerus) is our latest Ubuntu version
  - os: linux
    dist: xenial
    sudo: required
    addons:
      apt:
        packages:
          - libdb++-dev
          - libboost-all-dev
          - libqrencode-dev
          - libminiupnpc-dev
    script: cd src && make -f makefile.unix -j2 STATIC="all" LDFLAGS="-static"

  # Build mintcoind static
  # Ubuntu 16.04 LTS (Xenial Xerus) is our latest Ubuntu version
  # Make a 32-bit version using Debian multiarch
  - os: linux
    dist: xenial
    sudo: required
    # To support 32-bit builds, we add the i386 architecture to
    # Ubuntu, and then install 32-bit versions of the compiler and
    # libraries needed. For details of Debian multiarch see the wiki:
    #
    # https://wiki.debian.org/Multiarch
    #
    # Even with multiarch support, we have to do a bit of a dance, for
    # two reasons.
    #
    # First, apt-get does not seem to understand dependencies for
    # the multiarch stuff, so we have to explicitly install all of
    # the dependencies.
    #
    # Second, one of the packages is built for the "all" architecture.
    # In principle this should work, but for some reason the system
    # insists that to use it for the MPI libraries it needs to be for
    # the "i386" architecture. So we download and repackage the .deb
    # file modified to support this. For details see this Serverfault
    # message:
    #
    # https://serverfault.com/a/383958
    #
    before_script:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update
        - sudo apt-get install -y gcc:i386 cpp:i386 gcc-4.8:i386 binutils:i386
        - sudo apt-get install -y g++:i386
        - sudo apt-get install -y libssl-dev:i386
        - sudo apt-get install -y libdb++-dev:i386
        - sudo apt-get install -y libminiupnpc-dev:i386
        - apt-get download openmpi-common:all
        - ar x openmpi-common_*_all.deb
        - tar xf control.tar.gz
        - |
          sed -i "s/^Architecture: all/Architecture: i386/" control
        - tar czf control.tar.gz md5sums control
        - ar rcs openmpi-common_*_all.deb debian-binary control.tar.gz data.tar.xz
        - sudo dpkg -i openmpi-common_*_all.deb
        - sudo apt-get install -y libboost-all-dev:i386 libboost-mpi-dev:i386 libboost-mpi-python-dev:i386 libboost-mpi-python1.54-dev:i386 libboost-mpi-python1.54.0:i386 libboost-mpi-python1.54-dev:i386 libboost-mpi1.54-dev:i386 python:i386
    script: cd src && make -f makefile.unix -j2 STATIC="all" LDFLAGS="-static"

  # Build mintcoind
  # OS X 10.11 (El Capitan)
  - os: osx
    osx_image: xcode7.3
    script: cd src && make -f makefile.osx -j2

  # Build mintcoind static
  # OS X 10.11 (El Capitan)
  - os: osx
    osx_image: xcode7.3
    script: cd src && make -f makefile.osx -j2 STATIC="all" LDFLAGS="-static"

  # Build mintcoind
  # OS X 10.12 (Sierra)
  - os: osx
    osx_image: xcode8.3
    script: cd src && make -f makefile.osx -j2

  # Build mintcoind static
  # OS X 10.12 (Sierra)
  - os: osx
    osx_image: xcode8.3
    script: cd src && make -f makefile.osx -j2 STATIC="all" LDFLAGS="-static"

  # Build mintcoind
  # OS X 10.13 (High Sierra)
  - os: osx
    osx_image: xcode9.3beta
    script: cd src && make -f makefile.osx -j2

  # Build mintcoind static
  # OS X 10.13 (High Sierra)
  - os: osx
    osx_image: xcode9.3beta
    script: cd src && make -f makefile.osx -j2 STATIC="all" LDFLAGS="-static"

  # Build MintCoin-Qt
  # Ubuntu 16.04 LTS (Xenial Xerus) is our latest Ubuntu version
  - os: linux
    dist: xenial
    sudo: required
    addons:
      apt:
        packages:
          - libdb++-dev
          - libboost-all-dev
          - libqrencode-dev
          - libminiupnpc-dev
          - qt4-qmake
          - libqt4-dev
    script: qmake && make -j2

  # Build MintCoin-Qt
  # Ubuntu 16.04 LTS (Xenial Xerus) is our latest Ubuntu version
  # Make a 32-bit version using Debian multiarch
  - os: linux
    dist: xenial
    sudo: required
    # To support 32-bit builds, we add the i386 architecture to
    # Ubuntu, and then install 32-bit versions of the compiler and
    # libraries needed. For details of Debian multiarch see the wiki:
    #
    # https://wiki.debian.org/Multiarch
    #
    # Even with multiarch support, we have to do a bit of a dance, for
    # two reasons.
    #
    # First, apt-get does not seem to understand dependencies for
    # the multiarch stuff, so we have to explicitly install all of
    # the dependencies.
    #
    # Second, one of the packages is built for the "all" architecture.
    # In principle this should work, but for some reason the system
    # insists that to use it for the MPI libraries it needs to be for
    # the "i386" architecture. So we download and repackage the .deb
    # file modified to support this. For details see this Serverfault
    # message:
    #
    # https://serverfault.com/a/383958
    #
    before_script:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update
        - sudo apt-get install -y gcc:i386 cpp:i386 gcc-4.8:i386 binutils:i386
        - sudo apt-get install -y g++:i386
        - sudo apt-get install -y libssl-dev:i386
        - sudo apt-get install -y libdb++-dev:i386
        - sudo apt-get install -y libminiupnpc-dev:i386
        - apt-get download openmpi-common:all
        - ar x openmpi-common_*_all.deb
        - tar xf control.tar.gz
        - |
          sed -i "s/^Architecture: all/Architecture: i386/" control
        - tar czf control.tar.gz md5sums control
        - ar rcs openmpi-common_*_all.deb debian-binary control.tar.gz data.tar.xz
        - sudo dpkg -i openmpi-common_*_all.deb
        - sudo apt-get install -y libboost-all-dev:i386 libboost-mpi-dev:i386 libboost-mpi-python-dev:i386 libboost-mpi-python1.54-dev:i386 libboost-mpi-python1.54.0:i386 libboost-mpi-python1.54-dev:i386 libboost-mpi1.54-dev:i386 python:i386
        - sudo apt-get install -y libqrencode-dev:i386
        - sudo apt-get install -y qt4-qmake:i386 libqt4-dev:i386
        - sudo apt-get install -y qtchooser:i386
        - sudo apt-get install -y qt4-linguist-tools:i386
        - sudo apt-get install -y libqt4-dev-bin:i386
    script: /usr/lib/i386-linux-gnu/qt4/bin/qmake && make -j2

  # Build MintCoin-Qt
  # Cross-compile Windows 32-bit GUI
  - os: linux
    dist: xenial
    sudo: required
    script: bash src/mxe-build.sh windows32-qt

  # Build MintCoin-Qt
  # Cross-compile Windows 64-bit GUI
  - os: linux
    dist: xenial
    sudo: required
    script: bash src/mxe-build.sh windows64-qt

  # Build MintCoin-Qt
  # OS X 10.12 (Sierra)
  - os: osx
    osx_image: xcode8.3
    script: brew install qrencode qt && /usr/local/opt/qt/bin/qmake && make -j2

  # Build MintCoin-Qt
  # OS X 10.13 (High Sierra)
  - os: osx
    osx_image: xcode9.3beta
    script: brew install qrencode qt && /usr/local/opt/qt/bin/qmake && make -j2 
